{"ast":null,"code":"var _jsxFileName = \"D:\\\\Linh tinh\\\\Money\\\\Gok_lagnooblag\\\\BOTrading_ClientWeb\\\\src\\\\Page\\\\DashBoard\\\\connection.js\";\nimport React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport Chart from \"chart.js/auto\";\nimport \"chartjs-adapter-luxon\";\nimport AnnotationPlugin from 'chartjs-plugin-annotation';\nimport Service from './../../services/request';\nimport ChartStreaming from \"chartjs-plugin-streaming\";\nChart.register(ChartStreaming, AnnotationPlugin);\nlet payLoadData = null;\n\nconst Connection = ({\n  payload,\n  betRecordChange,\n  typeMoney\n}) => {\n  const [chart, setChart] = useState();\n  let myTimeout = null;\n\n  const onRefresh = chart => {\n    if (payLoadData && +payLoadData.price) {\n      const now = new Date(payLoadData._id);\n      const c = chart.scales.y._range.max - chart.scales.y._range.min;\n      const d = chart.scales.y._range.max - +payLoadData.price;\n      const r = d * chart.scales.y.maxHeight / c;\n\n      if (d < 0) {\n        window.jQuery(\".now-data\").css(\"top\", \"-100%\");\n      } else {\n        window.jQuery(\".now-data\").css(\"top\", `${r > chart.scales.y.maxHeight ? chart.scales.y.maxHeight - 10 : r}px`);\n      }\n\n      window.jQuery(\".now-data b\").text(payLoadData.price);\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.push({\n          x: now,\n          y: +payLoadData.price\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const data = {\n      datasets: [{\n        // label: \"chart\",\n        backgroundColor: \"\",\n        borderWidth: 1,\n        borderColor: \"rgba(255, 255, 255, 1)\",\n        pointRadius: 0,\n        lineTension: .1,\n        fill: !0,\n        cubicInterpolationMode: \"monotone\",\n        data: []\n      }]\n    };\n    const ctx = window.jQuery('#test');\n    ctx.height(320);\n    const chartTmp = new Chart(ctx, {\n      type: \"line\",\n      data: data,\n      options: {\n        title: {\n          display: !1\n        },\n        maintainAspectRatio: !1,\n        legend: {\n          display: !1\n        },\n        tooltips: {\n          enabled: !1\n        },\n        hover: {\n          intersect: !1,\n          enabled: !0,\n          mode: \"index\",\n          animationDuration: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          datalabels: {\n            display: false\n          },\n          annotation: {\n            annotations: [{\n              type: 'line',\n              yMin: 0,\n              yMax: 0,\n              borderWidth: 0\n            }, {\n              type: 'line',\n              yMin: 0,\n              yMax: 0,\n              borderWidth: 0\n            }, {\n              type: 'line',\n              yMin: 0,\n              yMax: 0,\n              borderWidth: 0\n            }]\n          } // annotation: {\n          //   annotations: {\n          //     line1: {\n          //       type: 'line',\n          //       yMin: 60,\n          //       yMax: 6000000,\n          //       borderColor: 'rgb(255, 99, 132)',\n          //       borderWidth: 2,\n          //     }\n          //   }\n          // }\n\n        },\n        scales: {\n          x: {\n            type: \"realtime\",\n            realtime: {\n              duration: 75000,\n              refresh: 3000,\n              delay: 2000,\n              onRefresh: onRefresh\n            },\n            time: {\n              minUnit: \"millisecond\",\n              displayFormats: {\n                millisecond: \"HH:mm:ss.SSS\",\n                second: \"HH:mm:ss\",\n                minute: \"HH:mm:ss\",\n                hour: \"hA\",\n                day: \"MMM D\",\n                week: \"ll\",\n                month: \"MMM YYYY\",\n                quarter: \"[Q]Q - YYYY\",\n                year: \"YYYY\"\n              }\n            },\n            gridLines: {\n              color: \"rgba(102, 175, 218, 0.3)\",\n              zeroLineColor: \"rgba(47, 48, 53, 1)\",\n              drawBorder: !0,\n              lineWidth: 1\n            },\n            ticks: {\n              fontColor: \"rgba(199, 199, 199, 1)\"\n            }\n          },\n          y: {\n            type: \"linear\",\n            display: !0,\n            position: \"right\",\n            gridLines: {\n              color: \"rgba(102, 175, 218, 0.3)\",\n              zeroLineColor: \"rgba(47, 48, 53, 1)\",\n              drawBorder: !0,\n              lineWidth: 1,\n              offsetGridLines: !0\n            },\n            scaleLabel: {\n              display: !1\n            },\n            ticks: {\n              fontColor: \"rgba(199, 199, 199, 1)\"\n            }\n          }\n        },\n        pan: {\n          enabled: !0,\n          mode: \"x\"\n        },\n        zoom: {\n          enabled: !1\n        },\n        annotation: {\n          events: [\"click\"],\n          dblClickSpeed: 350,\n          annotations: []\n        },\n        interaction: {\n          intersect: false\n        }\n      }\n    });\n    const l = window.jQuery(\"#test\").get(0).getContext(\"2d\");\n    let a = window.jQuery(\"#test\").height();\n    a = l.createLinearGradient(0, 0, 0, a - 50);\n    a.addColorStop(0, \"rgba(39, 144, 210, 0.5)\");\n    a.addColorStop(.8, \"rgba(39, 144, 210, 0.1)\");\n    a.addColorStop(.95, \"rgba(39, 144, 210, 0.025)\");\n    a.addColorStop(1, \"rgba(39, 144, 210, 0)\");\n    chartTmp.data.datasets[0].backgroundColor = a;\n    setChart(chartTmp);\n    Service.send({\n      method: 'post',\n      path: 'Game/gameChartRecordList',\n      data: {\n        cryptoCurrency: `${typeMoney}`\n      }\n    }).then(result => {\n      if (result) {\n        const {\n          statusCode,\n          data: newData\n        } = result;\n\n        if (statusCode === 200) {\n          const tmpNewData = [];\n          newData.data.forEach((item, index) => {\n            if (+item.gameRecordPrice) {\n              tmpNewData.push({\n                x: new Date(item.gameRecordSection),\n                y: +item.gameRecordPrice\n              });\n            }\n          });\n          chartTmp.data.datasets[0].data = tmpNewData;\n        }\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (chart) {\n      if (payload.message) {\n        if (typeMoney === payload.topic) {\n          payLoadData = JSON.parse(`${payload.message}`);\n        }\n      }\n    }\n  }, [payload]);\n  useEffect(() => {\n    if (betRecordChange) {\n      if (chart, payLoadData) {\n        if (myTimeout) {\n          clearTimeout(myTimeout);\n        }\n\n        const tmp = new Date(payLoadData._id);\n        chart.config._config.options.plugins.annotation.annotations[3] = {\n          type: \"line\",\n          drawTime: \"afterDraw\",\n          mode: \"vertical\",\n          scaleID: \"x\",\n          value: tmp,\n          borderColor: \"rgba(116, 116, 116, 1)\",\n          borderWidth: 1,\n          label: {\n            backgroundColor: \"rgba(40,145,189,0.5)\",\n            content: `Giải quyết tại ${payLoadData.price}`,\n            fontStyle: \"normal\",\n            fonnColor: \"#8ba4c2\",\n            fontSize: 11,\n            xAdjust: 29,\n            cornerRadius: 0,\n            position: \"end\",\n            enabled: true,\n            font: {\n              size: 8,\n              xAdjust: 29,\n              fontStyle: \"normal\"\n            }\n          }\n        };\n        setTimeout(() => {\n          chart.config._config.options.plugins.annotation.annotations[3] = {\n            type: \"line\",\n            drawTime: \"afterDraw\",\n            mode: \"vertical\",\n            scaleID: \"x\",\n            value: tmp,\n            borderColor: \"rgba(116, 116, 116, 1)\",\n            display: false,\n            borderWidth: 1,\n            enabled: false,\n            label: {\n              backgroundColor: \"rgba(40,145,189,0.5)\",\n              content: `Giải quyết tại ${payLoadData.price}`,\n              fontStyle: \"normal\",\n              fonnColor: \"#8ba4c2\",\n              fontSize: 11,\n              xAdjust: 29,\n              cornerRadius: 0,\n              position: \"end\",\n              enabled: false,\n              font: {\n                size: 8,\n                xAdjust: 29,\n                fontStyle: \"normal\"\n              }\n            }\n          };\n        }, 40000);\n      }\n    }\n  }, [betRecordChange]);\n  useEffect(() => {\n    if (chart) {\n      const checkTime = 60 - +moment(payLoadData._id).format(\"ss\");\n\n      if (checkTime === 15 || checkTime === 16) {\n        let time = new Date();\n        time.setSeconds(time.getSeconds() + 15);\n        chart.config._config.options.plugins.annotation.annotations[0] = {\n          type: \"box\",\n          drawTime: \"afterDraw\",\n          xScaleID: \"x\",\n          xMin: new Date(),\n          xMax: time,\n          backgroundColor: \"rgba(33, 95, 158, 0.1)\",\n          borderWidth: 0\n        };\n        chart.config._config.options.plugins.annotation.annotations[1] = {\n          type: \"line\",\n          drawTime: \"beforeDraw\",\n          mode: \"vertical\",\n          scaleID: \"x\",\n          value: new Date(),\n          borderColor: \"white\",\n          borderWidth: 1,\n          label: {\n            adjustScaleRange: true,\n            backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n            content: \"Kết thúc mua hàng\",\n            marginRight: \"20px\",\n            fonnColor: \"#8ba4c2\",\n            fontSize: 8,\n            xAdjust: -44,\n            cornerRadius: 0,\n            position: \"start\",\n            enabled: !0,\n            font: {\n              size: 8,\n              xAdjust: 29,\n              fontStyle: \"normal\"\n            }\n          }\n        };\n        setTimeout(() => {\n          chart.config._config.options.plugins.annotation.annotations[2] = {\n            type: \"line\",\n            drawTime: \"beforeDraw\",\n            mode: \"vertical\",\n            scaleID: \"x\",\n            value: time,\n            borderColor: \"white\",\n            borderWidth: 1,\n            label: {\n              backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n              content: `Đếm ngược ${checkTime}s chia ra`,\n              fontStyle: \"normal\",\n              fonnColor: \"#8ba4c2\",\n              fontSize: 8,\n              xAdjust: 32,\n              cornerRadius: 0,\n              adjustScaleRange: true,\n              position: \"start\",\n              enabled: !0,\n              marginLeft: \"20px\",\n              font: {\n                size: 8,\n                xAdjust: 29,\n                fontStyle: \"normal\"\n              }\n            }\n          };\n        }, 10000);\n      }\n\n      if (chart.config._config.options.plugins.annotation.annotations[2].label) {\n        chart.config._config.options.plugins.annotation.annotations[2].label.content = `Đếm ngược ${checkTime}s chia ra`;\n      }\n    }\n  }, [payload]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chartData\",\n    styles: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drawing-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 46\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"now-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 34\n    }\n  }))));\n};\n\nexport default Connection;","map":{"version":3,"sources":["D:/Linh tinh/Money/Gok_lagnooblag/BOTrading_ClientWeb/src/Page/DashBoard/connection.js"],"names":["React","useState","useEffect","moment","Chart","AnnotationPlugin","Service","ChartStreaming","register","payLoadData","Connection","payload","betRecordChange","typeMoney","chart","setChart","myTimeout","onRefresh","price","now","Date","_id","c","scales","y","_range","max","min","d","r","maxHeight","window","jQuery","css","text","data","datasets","forEach","dataset","push","x","backgroundColor","borderWidth","borderColor","pointRadius","lineTension","fill","cubicInterpolationMode","ctx","height","chartTmp","type","options","title","display","maintainAspectRatio","legend","tooltips","enabled","hover","intersect","mode","animationDuration","plugins","datalabels","annotation","annotations","yMin","yMax","realtime","duration","refresh","delay","time","minUnit","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","gridLines","color","zeroLineColor","drawBorder","lineWidth","ticks","fontColor","position","offsetGridLines","scaleLabel","pan","zoom","events","dblClickSpeed","interaction","l","get","getContext","a","createLinearGradient","addColorStop","send","method","path","cryptoCurrency","then","result","statusCode","newData","tmpNewData","item","index","gameRecordPrice","gameRecordSection","message","topic","JSON","parse","clearTimeout","tmp","config","_config","drawTime","scaleID","value","label","content","fontStyle","fonnColor","fontSize","xAdjust","cornerRadius","font","size","setTimeout","checkTime","format","setSeconds","getSeconds","xScaleID","xMin","xMax","adjustScaleRange","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport moment from \"moment\"\r\nimport Chart from \"chart.js/auto\"\r\nimport \"chartjs-adapter-luxon\";\r\nimport AnnotationPlugin from 'chartjs-plugin-annotation';\r\nimport Service from './../../services/request'\r\nimport ChartStreaming from \"chartjs-plugin-streaming\";\r\nChart.register(ChartStreaming, AnnotationPlugin);\r\nlet payLoadData = null\r\n\r\nconst Connection = ({ payload, betRecordChange, typeMoney }) => {\r\n const [chart, setChart] = useState()\r\n let myTimeout= null\r\n \r\n  const onRefresh = (chart) => {\r\n    if(payLoadData && +payLoadData.price){\r\n      const now = new Date(payLoadData._id);\r\n \r\n      const c = chart.scales.y._range.max -  chart.scales.y._range.min  ;\r\n      const d = chart.scales.y._range.max -  (+payLoadData.price)  ;\r\n      const r = d * chart.scales.y.maxHeight / c\r\n      \r\n      if(d < 0){\r\n        window.jQuery(\".now-data\").css(\"top\",\"-100%\")\r\n      }else{\r\n        window.jQuery(\".now-data\").css(\"top\", `${r > chart.scales.y.maxHeight ? chart.scales.y.maxHeight -10 : r}px`)\r\n      }\r\n   \r\n      window.jQuery(\".now-data b\").text(payLoadData.price)\r\n  \r\n     \r\n      \r\n      chart.data.datasets.forEach((dataset) => {\r\n        dataset.data.push({\r\n          x: now,\r\n          y: +payLoadData.price,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(()=>{\r\n    const data = {\r\n      datasets: [\r\n        {\r\n          // label: \"chart\",\r\n          backgroundColor: \"\",\r\n          borderWidth: 1,\r\n          borderColor: \"rgba(255, 255, 255, 1)\",\r\n          pointRadius: 0,\r\n          lineTension: .1,\r\n          fill: !0,\r\n          cubicInterpolationMode: \"monotone\",\r\n          data: [],\r\n        },\r\n      ],\r\n    };\r\n\r\n    const ctx = window.jQuery('#test');\r\n    ctx.height(320);\r\n\r\n   const chartTmp = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: data,\r\n      options: {\r\n        title: {\r\n          display: !1\r\n        },\r\n        maintainAspectRatio: !1,\r\n        legend: {\r\n            display: !1\r\n        },\r\n        tooltips: {\r\n            enabled: !1\r\n        },\r\n        hover: {\r\n            intersect: !1,\r\n            enabled: !0,\r\n            mode: \"index\",\r\n            animationDuration: 0\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          datalabels: {\r\n            display: false\r\n          },\r\n          annotation: {\r\n            annotations: [\r\n              {\r\n                type: 'line',\r\n                yMin: 0,\r\n                yMax: 0,\r\n                \r\n                borderWidth: 0,\r\n              },\r\n              {\r\n                type: 'line',\r\n                yMin: 0,\r\n                yMax: 0,\r\n                \r\n                borderWidth: 0,\r\n              },\r\n              {\r\n                type: 'line',\r\n                yMin: 0,\r\n                yMax: 0,\r\n                \r\n                borderWidth: 0,\r\n              }\r\n            ]\r\n           \r\n             \r\n            \r\n    \r\n        },\r\n          // annotation: {\r\n          //   annotations: {\r\n          //     line1: {\r\n          //       type: 'line',\r\n          //       yMin: 60,\r\n          //       yMax: 6000000,\r\n          //       borderColor: 'rgb(255, 99, 132)',\r\n          //       borderWidth: 2,\r\n          //     }\r\n          //   }\r\n          // }\r\n      \r\n        },      \r\n        scales: {\r\n          x: {\r\n            type: \"realtime\",\r\n            realtime: {\r\n              duration: 75000,\r\n              refresh: 3000,\r\n              delay: 2000,\r\n              onRefresh: onRefresh,\r\n            },\r\n            time: {\r\n              minUnit: \"millisecond\",\r\n              displayFormats: {\r\n                  millisecond: \"HH:mm:ss.SSS\",\r\n                  second: \"HH:mm:ss\",\r\n                  minute: \"HH:mm:ss\",\r\n                  hour: \"hA\",\r\n                  day: \"MMM D\",\r\n                  week: \"ll\",\r\n                  month: \"MMM YYYY\",\r\n                  quarter: \"[Q]Q - YYYY\",\r\n                  year: \"YYYY\"\r\n              }\r\n          },\r\n          gridLines: {\r\n              color: \"rgba(102, 175, 218, 0.3)\",\r\n              zeroLineColor: \"rgba(47, 48, 53, 1)\",\r\n              drawBorder: !0,\r\n              lineWidth: 1\r\n          },\r\n          ticks: {\r\n              fontColor: \"rgba(199, 199, 199, 1)\"\r\n          }\r\n          },\r\n          y: {\r\n            type: \"linear\",\r\n            display: !0,\r\n            position: \"right\",\r\n            gridLines: {\r\n                color: \"rgba(102, 175, 218, 0.3)\",\r\n                zeroLineColor: \"rgba(47, 48, 53, 1)\",\r\n                drawBorder: !0,\r\n                lineWidth: 1,\r\n                offsetGridLines: !0\r\n            },\r\n            scaleLabel: {\r\n                display: !1\r\n            },\r\n            ticks: {\r\n                fontColor: \"rgba(199, 199, 199, 1)\"\r\n            }\r\n          },\r\n\r\n        },\r\n        pan: {\r\n          enabled: !0,\r\n            mode: \"x\",\r\n        },\r\n        zoom: {\r\n            enabled: !1\r\n        },\r\n        annotation: {\r\n            events: [\"click\"],\r\n            dblClickSpeed: 350,\r\n            annotations: []\r\n    \r\n        },\r\n        interaction: {\r\n          intersect: false,\r\n        },\r\n      },\r\n    });\r\n    const l = window.jQuery(\"#test\").get(0).getContext(\"2d\");\r\n    let a = window.jQuery(\"#test\").height();\r\n    a = l.createLinearGradient(0, 0, 0, a - 50);\r\n    a.addColorStop(0, \"rgba(39, 144, 210, 0.5)\");\r\n    a.addColorStop(.8, \"rgba(39, 144, 210, 0.1)\");\r\n    a.addColorStop(.95, \"rgba(39, 144, 210, 0.025)\");\r\n    a.addColorStop(1, \"rgba(39, 144, 210, 0)\");\r\n    chartTmp.data.datasets[0].backgroundColor = a\r\n    setChart(chartTmp)\r\n\r\n    Service.send({\r\n      method: 'post', path: 'Game/gameChartRecordList',data: {\r\n        cryptoCurrency: `${typeMoney}`\r\n      },\r\n    }).then(result => {\r\n      if (result) {\r\n        const { statusCode, data: newData } = result \r\n        if (statusCode === 200) {\r\n        \r\n          const tmpNewData = []\r\n          \r\n          newData.data.forEach((item, index)=>{\r\n            if(+item.gameRecordPrice){\r\n              \r\n              tmpNewData.push({\r\n                x: new Date(item.gameRecordSection),\r\n                y: +item.gameRecordPrice,\r\n              })\r\n            }\r\n           \r\n          })\r\n     \r\n        \r\n          chartTmp.data.datasets[0].data = tmpNewData\r\n          \r\n         \r\n         \r\n        }\r\n      } \r\n    })\r\n  \r\n  },[])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(chart){\r\n      if(payload.message){\r\n   \r\n        if(typeMoney === payload.topic){\r\n           payLoadData = JSON.parse(`${payload.message}`)\r\n        }   \r\n      }\r\n    }\r\n   }, [payload])\r\n\r\n  useEffect(()=>{\r\n    if(betRecordChange){\r\n      \r\n      if(chart, payLoadData){    \r\n        if(myTimeout){\r\n          clearTimeout(myTimeout)\r\n        }\r\n        const tmp  = new Date(payLoadData._id)\r\n        chart.config._config.options.plugins.annotation.annotations[3] =  {\r\n          type: \"line\",\r\n          drawTime: \"afterDraw\",\r\n          mode: \"vertical\",\r\n          scaleID: \"x\",\r\n          value:  tmp,\r\n          borderColor: \"rgba(116, 116, 116, 1)\",\r\n          borderWidth: 1,\r\n          label: {\r\n              backgroundColor: \"rgba(40,145,189,0.5)\",\r\n              content: `Giải quyết tại ${payLoadData.price}`,\r\n              fontStyle: \"normal\",\r\n              fonnColor: \"#8ba4c2\",\r\n              fontSize: 11,\r\n              xAdjust: 29,\r\n              cornerRadius: 0,\r\n              position: \"end\",\r\n              enabled: true,\r\n              font: { size: 8 , xAdjust: 29, fontStyle: \"normal\",}\r\n          }\r\n       }\r\n\r\n       setTimeout(()=>{\r\n         chart.config._config.options.plugins.annotation.annotations[3] ={\r\n          type: \"line\",\r\n          drawTime: \"afterDraw\",\r\n          mode: \"vertical\",\r\n          scaleID: \"x\",\r\n          value:  tmp,\r\n          borderColor: \"rgba(116, 116, 116, 1)\",\r\n          display: false,\r\n          borderWidth: 1,\r\n          enabled: false,\r\n          label: {\r\n            backgroundColor: \"rgba(40,145,189,0.5)\",\r\n            content: `Giải quyết tại ${payLoadData.price}`,\r\n            fontStyle: \"normal\",\r\n            fonnColor: \"#8ba4c2\",\r\n            fontSize: 11,\r\n            xAdjust: 29,\r\n            cornerRadius: 0,\r\n            position: \"end\",\r\n            enabled: false,\r\n            font: { size: 8 , xAdjust: 29, fontStyle: \"normal\",}\r\n        }\r\n         }\r\n       }, 40000)\r\n      \r\n      }\r\n       \r\n    }\r\n  }, [betRecordChange])\r\n\r\n  useEffect(()=>{\r\n    if(chart){\r\n      const checkTime = 60 - (+moment(payLoadData._id).format(\"ss\"))\r\n      if( checkTime === 15 || checkTime ===16){\r\n        let time = new Date();\r\n        time.setSeconds(time.getSeconds() + 15);\r\n        chart.config._config.options.plugins.annotation.annotations[0] = {\r\n               \r\n          type: \"box\",\r\n          drawTime: \"afterDraw\",\r\n          xScaleID: \"x\",\r\n          xMin: new Date()  ,\r\n          xMax: time,\r\n          backgroundColor: \"rgba(33, 95, 158, 0.1)\",\r\n          borderWidth: 0\r\n                  \r\n         }\r\n         chart.config._config.options.plugins.annotation.annotations[1] = {\r\n           \r\n             type: \"line\",\r\n             drawTime: \"beforeDraw\",\r\n             mode: \"vertical\",\r\n             scaleID: \"x\",\r\n             value: new Date(),\r\n            \r\n             borderColor: \"white\",\r\n             borderWidth: 1,\r\n             label: {\r\n                 adjustScaleRange: true,\r\n                 backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n                 content: \"Kết thúc mua hàng\",\r\n                 marginRight: \"20px\",\r\n                 fonnColor: \"#8ba4c2\",\r\n                 fontSize: 8,\r\n                 xAdjust: -44,\r\n                 cornerRadius: 0,\r\n                 position: \"start\",\r\n                 enabled: !0,\r\n                 font: { size: 8 , xAdjust: 29, fontStyle: \"normal\",}\r\n             }\r\n            \r\n         }\r\n         setTimeout(()=>{\r\n          chart.config._config.options.plugins.annotation.annotations[2] = {\r\n            type: \"line\",\r\n            drawTime: \"beforeDraw\",\r\n            mode: \"vertical\",\r\n            scaleID: \"x\",\r\n            value: time,\r\n            borderColor: \"white\",\r\n            borderWidth: 1,\r\n            label: {\r\n                backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n                content: `Đếm ngược ${checkTime}s chia ra`,\r\n                fontStyle: \"normal\",\r\n                fonnColor: \"#8ba4c2\",\r\n                fontSize: 8,\r\n                xAdjust: 32,\r\n                cornerRadius: 0,\r\n                adjustScaleRange: true,\r\n                position: \"start\",\r\n                enabled: !0,\r\n                marginLeft: \"20px\",\r\n                font: { size: 8 , xAdjust: 29, fontStyle: \"normal\",}\r\n            }\r\n           \r\n        }\r\n         },10000)\r\n      }\r\n      if(chart.config._config.options.plugins.annotation.annotations[2].label){\r\n        chart.config._config.options.plugins.annotation.annotations[2].label.content =  `Đếm ngược ${checkTime}s chia ra`\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    \r\n  \r\n  },[payload])\r\n  \r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <div className=\"chartData\" styles={{position: \"relative\"}} >\r\n      \r\n           <div className=\"drawing-content\"> <canvas id=\"test\"></canvas></div>\r\n    \r\n          <span class=\"now-data\"><b></b></span>\r\n        \r\n     \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Connection;"]},"metadata":{},"sourceType":"module"}