{"ast":null,"code":"import axios from 'axios';\nimport { HOST } from './../constants/url';\nimport { getQueryString } from '../helper/common';\n\nfunction send({\n  method = 'get',\n  path,\n  data = null,\n  query = null,\n  headers = {},\n  newUrl\n}) {\n  return new Promise(resolve => {\n    let url = HOST + `${path}${getQueryString(query)}`;\n\n    if (newUrl) {\n      url = `${newUrl}${getQueryString(query)}`;\n    }\n\n    const dataString = window.localStorage.getItem('data');\n\n    if (dataString) {\n      const newData = JSON.parse(dataString);\n      headers.authorization = `Bearer ${newData.token}`;\n    }\n\n    axios({\n      method,\n      url,\n      data,\n      headers\n    }).then(result => {\n      const data = result.data;\n      return resolve(data);\n    }).catch(error => {\n      const {\n        response = {}\n      } = error;\n      const result = response.data ? response.data : null;\n\n      if (!result) {} else {\n        const {\n          statusCode,\n          message: data\n        } = result;\n\n        if (statusCode === 401 && data === 'Expired token received for JSON Web Token validation') {\n          window.localStorage.clear();\n          window.location.href = '/';\n        } else if (statusCode === 401 && data === 'Unauthorized' || statusCode === 403 && data === 'InvalidToken') {\n          window.localStorage.clear();\n          window.location.href = '/';\n        } else {\n          return resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexport default {\n  send\n};","map":{"version":3,"sources":["D:/Linh tinh/Money/Gok_lagnooblag/BOTrading_ClientWeb/src/services/request.js"],"names":["axios","HOST","getQueryString","send","method","path","data","query","headers","newUrl","Promise","resolve","url","dataString","window","localStorage","getItem","newData","JSON","parse","authorization","token","then","result","catch","error","response","statusCode","message","clear","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SACEC,cADF,QAEO,kBAFP;;AAIA,SAASC,IAAT,CAAc;AACZC,EAAAA,MAAM,GAAG,KADG;AACIC,EAAAA,IADJ;AACUC,EAAAA,IAAI,GAAG,IADjB;AACuBC,EAAAA,KAAK,GAAG,IAD/B;AACqCC,EAAAA,OAAO,GAAG,EAD/C;AACmDC,EAAAA;AADnD,CAAd,EAEG;AACD,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,QAAIC,GAAG,GAAGX,IAAI,GAAI,GAAEI,IAAK,GAAEH,cAAc,CAACK,KAAD,CAAQ,EAAjD;;AACA,QAAIE,MAAJ,EAAY;AACVG,MAAAA,GAAG,GAAI,GAAEH,MAAO,GAAEP,cAAc,CAACK,KAAD,CAAQ,EAAxC;AACD;;AACD,UAAMM,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAnB;;AAEA,QAAGH,UAAH,EAAc;AACZ,YAAMI,OAAO,GAAIC,IAAI,CAACC,KAAL,CAAWN,UAAX,CAAjB;AACAL,MAAAA,OAAO,CAACY,aAAR,GAAwB,UAASH,OAAO,CAACI,KAAM,EAA/C;AACD;;AACDrB,IAAAA,KAAK,CAAC;AACJI,MAAAA,MADI;AACIQ,MAAAA,GADJ;AACSN,MAAAA,IADT;AACeE,MAAAA;AADf,KAAD,CAAL,CAGGc,IAHH,CAGSC,MAAD,IAAY;AAEhB,YAAMjB,IAAI,GAAGiB,MAAM,CAACjB,IAApB;AACA,aAAOK,OAAO,CAACL,IAAD,CAAd;AACD,KAPH,EAQGkB,KARH,CAQUC,KAAD,IAAW;AAChB,YAAM;AAACC,QAAAA,QAAQ,GAAE;AAAX,UAAiBD,KAAvB;AAEA,YAAMF,MAAM,GAAGG,QAAQ,CAACpB,IAAT,GAAgBoB,QAAQ,CAACpB,IAAzB,GAA+B,IAA9C;;AAEA,UAAI,CAACiB,MAAL,EAAa,CAEZ,CAFD,MAGK;AACH,cAAM;AAAEI,UAAAA,UAAF;AAAcC,UAAAA,OAAO,EAAEtB;AAAvB,YAAgCiB,MAAtC;;AAEA,YAAII,UAAU,KAAK,GAAf,IAAsBrB,IAAI,KAAK,sDAAnC,EAA2F;AACzFQ,UAAAA,MAAM,CAACC,YAAP,CAAoBc,KAApB;AACAf,UAAAA,MAAM,CAACgB,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AAED,SAJD,MAKK,IACFJ,UAAU,KAAK,GAAf,IAAsBrB,IAAI,KAAK,cAAhC,IAAoDqB,UAAU,KAAK,GAAf,IAAsBrB,IAAI,KAAK,cADhF,EACiG;AAClGQ,UAAAA,MAAM,CAACC,YAAP,CAAoBc,KAApB;AACAf,UAAAA,MAAM,CAACgB,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AAEH,SALI,MAMA;AACH,iBAAOpB,OAAO,CAACY,MAAD,CAAd;AACD;AACF;AACF,KAlCH;AAmCD,GA9CM,CAAP;AA+CD;;AAED,eAAe;AACbpB,EAAAA;AADa,CAAf","sourcesContent":["import axios from 'axios'\r\n\r\nimport { HOST } from './../constants/url'\r\n\r\nimport {\r\n  getQueryString,\r\n} from '../helper/common'\r\n\r\nfunction send({\r\n  method = 'get', path, data = null, query = null, headers = {}, newUrl\r\n}) {\r\n  return new Promise((resolve) => {\r\n    let url = HOST + `${path}${getQueryString(query)}`\r\n    if (newUrl) {\r\n      url = `${newUrl}${getQueryString(query)}`\r\n    }\r\n    const dataString = window.localStorage.getItem('data')\r\n    \r\n    if(dataString){\r\n      const newData =  JSON.parse(dataString)\r\n      headers.authorization =`Bearer ${newData.token}`\r\n    }\r\n    axios({\r\n      method, url, data, headers,\r\n    })\r\n      .then((result) => {\r\n        \r\n        const data = result.data\r\n        return resolve(data)\r\n      })\r\n      .catch((error) => {\r\n        const {response ={}} = error\r\n        \r\n        const result = response.data ? response.data :null\r\n        \r\n        if (!result) {\r\n          \r\n        }\r\n        else {\r\n          const { statusCode, message: data } = result\r\n          \r\n          if (statusCode === 401 && data === 'Expired token received for JSON Web Token validation') {\r\n            window.localStorage.clear()\r\n            window.location.href = '/'\r\n           \r\n          }\r\n          else if (\r\n            (statusCode === 401 && data === 'Unauthorized') || (statusCode === 403 && data === 'InvalidToken')) {\r\n              window.localStorage.clear()\r\n              window.location.href = '/'\r\n            \r\n          }\r\n          else {\r\n            return resolve(result)\r\n          }\r\n        }\r\n      })\r\n  })\r\n}\r\n\r\nexport default {\r\n  send,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}